// <auto-generated />
using System;
using Capstonep2.Infrastructure.Domain;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CalvinSAD.Migrations
{
    [DbContext(typeof(DefaultDBContext))]
    partial class DefaultDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Capstonep2.Infrastructure.Domain.Models.Appointment", b =>
                {
                    b.Property<Guid?>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("FDescription")
                        .HasColumnType("longtext");

                    b.Property<Guid?>("PatientID")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("Visit")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("PatientID");

                    b.ToTable("Appointments");
                });

            modelBuilder.Entity("Capstonep2.Infrastructure.Domain.Models.ApptPayment", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("AppointmentId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("FindingId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("AppointmentId");

                    b.HasIndex("FindingId");

                    b.ToTable("ApptPayment");
                });

            modelBuilder.Entity("Capstonep2.Infrastructure.Domain.Models.ApptProvider", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("AppointmentID")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("AppointmetId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("ProviderId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("AppointmentID");

                    b.HasIndex("ProviderId");

                    b.ToTable("ApptProviders");
                });

            modelBuilder.Entity("Capstonep2.Infrastructure.Domain.Models.ApptSevice", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("AppointmentId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("ServiceId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("AppointmentId");

                    b.HasIndex("ServiceId");

                    b.ToTable("ApptSevices");
                });

            modelBuilder.Entity("Capstonep2.Infrastructure.Domain.Models.Client", b =>
                {
                    b.Property<Guid?>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Address")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("FirstName")
                        .HasColumnType("longtext");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .HasColumnType("longtext");

                    b.Property<string>("MiddleName")
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.ToTable("Clients");

                    b.HasData(
                        new
                        {
                            ID = new Guid("2b792220-f333-49ec-abe2-3a6fc4edb0c2"),
                            Address = "Luakan,Dinalupihan, Bataan",
                            BirthDate = new DateTime(2023, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Luisa Katrina",
                            Gender = 0,
                            LastName = "Reyes",
                            MiddleName = "Pangilinan"
                        },
                        new
                        {
                            ID = new Guid("5a7e7bc3-8816-41df-b44d-eeb60ae99b5b"),
                            Address = "Luakan,Dinalupihan, Bataan",
                            BirthDate = new DateTime(2023, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Clarissa Joy",
                            Gender = 0,
                            LastName = "Flores",
                            MiddleName = "Gozon"
                        },
                        new
                        {
                            ID = new Guid("8664a4bd-0ec6-4aaa-83e6-7d2bd0315b5a"),
                            Address = "Bacong,Hermosa, Bataan",
                            BirthDate = new DateTime(2023, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Raniel",
                            Gender = 1,
                            LastName = "David",
                            MiddleName = "Mallari"
                        });
                });

            modelBuilder.Entity("Capstonep2.Infrastructure.Domain.Models.Payment", b =>
                {
                    b.Property<Guid?>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("AppointmentID")
                        .HasColumnType("char(36)");

                    b.Property<string>("FName")
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.HasIndex("AppointmentID");

                    b.ToTable("Payments");

                    b.HasData(
                        new
                        {
                            ID = new Guid("efd1381a-4c3d-4260-aaf2-04a0a26591bc"),
                            FName = "Cash"
                        },
                        new
                        {
                            ID = new Guid("672a4093-269e-47aa-879c-738cf2bf5e55"),
                            FName = "Checks"
                        },
                        new
                        {
                            ID = new Guid("332d1fb4-35f1-48d8-ac19-f66472fce607"),
                            FName = "Debit Card"
                        },
                        new
                        {
                            ID = new Guid("629d1da5-bf42-4dd5-9eda-614ba1260f03"),
                            FName = "Mobile Payment"
                        },
                        new
                        {
                            ID = new Guid("ab7f6ecf-7e82-4281-b90d-69f4ef72b66a"),
                            FName = "Electronic Bank Transfer"
                        });
                });

            modelBuilder.Entity("Capstonep2.Infrastructure.Domain.Models.Provider", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("AppointmentID")
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("AppointmentID");

                    b.ToTable("Providers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7f28dca4-e0f4-4798-a823-f44cdcd2a3b0"),
                            Name = "CJ"
                        },
                        new
                        {
                            Id = new Guid("70b4d9b7-e5bf-4da4-a355-a0af2da1d587"),
                            Name = "SID"
                        },
                        new
                        {
                            Id = new Guid("912f8c3e-3ca7-4703-a858-2b9bc7612096"),
                            Name = "GING"
                        },
                        new
                        {
                            Id = new Guid("3042ec44-a9b3-4bee-8a3d-14fd9f5167f7"),
                            Name = "VANGIE"
                        },
                        new
                        {
                            Id = new Guid("9f87d3db-3842-4a4d-8552-b568c7f44620"),
                            Name = "5"
                        });
                });

            modelBuilder.Entity("Capstonep2.Infrastructure.Domain.Models.Role", b =>
                {
                    b.Property<Guid?>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Abbreviation")
                        .HasColumnType("longtext");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            ID = new Guid("2afa881f-e519-4e67-a841-e4a2630e8a2a"),
                            Abbreviation = "Pt",
                            Description = "One who receives medical treatment",
                            Name = "patient"
                        },
                        new
                        {
                            ID = new Guid("54f00f70-72b8-4d34-a953-83321ff6b101"),
                            Abbreviation = "Adm",
                            Description = "One who manages the system",
                            Name = "admin"
                        });
                });

            modelBuilder.Entity("Capstonep2.Infrastructure.Domain.Models.Service", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("AppointmentID")
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("AppointmentID");

                    b.ToTable("Services");

                    b.HasData(
                        new
                        {
                            Id = new Guid("32d18f17-4f8f-4534-9394-703261e2390b"),
                            Name = "Body Massage"
                        },
                        new
                        {
                            Id = new Guid("10cbac3c-2dbf-45c9-8832-e6d2dd0b2168"),
                            Name = "Foot spa"
                        },
                        new
                        {
                            Id = new Guid("0bd555b4-5d90-4033-abd7-2b19dfce9f41"),
                            Name = "Manicure"
                        },
                        new
                        {
                            Id = new Guid("e0d9efd5-c988-4692-aafd-c0096b0093ff"),
                            Name = "Pedicure"
                        });
                });

            modelBuilder.Entity("Capstonep2.Infrastructure.Domain.Models.User", b =>
                {
                    b.Property<Guid?>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Address")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("ClientID")
                        .HasColumnType("char(36)");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .HasColumnType("longtext");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .HasColumnType("longtext");

                    b.Property<string>("MiddleName")
                        .HasColumnType("longtext");

                    b.Property<Guid?>("RoleID")
                        .HasColumnType("char(36)");

                    b.HasKey("ID");

                    b.HasIndex("ClientID");

                    b.HasIndex("RoleID");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            ID = new Guid("0352c124-f290-4f99-b1a5-e235cafcd836"),
                            Address = "Dinalupihan, Orani, Bataan",
                            BirthDate = new DateTime(2001, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ClientID = new Guid("2b792220-f333-49ec-abe2-3a6fc4edb0c2"),
                            Email = "luisa@yahoo.com",
                            FirstName = "Luisa Katrina",
                            Gender = 0,
                            LastName = "Pangilinan",
                            MiddleName = "Reyes",
                            RoleID = new Guid("2afa881f-e519-4e67-a841-e4a2630e8a2a")
                        },
                        new
                        {
                            ID = new Guid("d7dbd16f-1c71-4415-a147-22a2b428bf95"),
                            Address = "Dinalupihan, Orani, Bataan",
                            BirthDate = new DateTime(2001, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ClientID = new Guid("5a7e7bc3-8816-41df-b44d-eeb60ae99b5b"),
                            Email = "joy@yahoo.com",
                            FirstName = "Clarissa Joy",
                            Gender = 1,
                            LastName = "Gozon",
                            MiddleName = "Flores",
                            RoleID = new Guid("2afa881f-e519-4e67-a841-e4a2630e8a2a")
                        },
                        new
                        {
                            ID = new Guid("7e5e4f74-9902-43da-9974-4b2a08814398"),
                            Address = "Dinalupihan, Orani, Bataan",
                            BirthDate = new DateTime(2001, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ClientID = new Guid("8664a4bd-0ec6-4aaa-83e6-7d2bd0315b5a"),
                            Email = "client@yahoo.com",
                            FirstName = "Calvin",
                            Gender = 1,
                            LastName = "CLient",
                            MiddleName = "NicDao",
                            RoleID = new Guid("2afa881f-e519-4e67-a841-e4a2630e8a2a")
                        },
                        new
                        {
                            ID = new Guid("1bd5f519-b891-4491-9a7c-a86cd0c2a15e"),
                            Address = "Dinalupihan, Orani , Bataan",
                            BirthDate = new DateTime(2002, 9, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "admin@yahoo.com",
                            FirstName = "Calvin",
                            Gender = 0,
                            LastName = "Admin",
                            MiddleName = "NicDao",
                            RoleID = new Guid("54f00f70-72b8-4d34-a953-83321ff6b101")
                        },
                        new
                        {
                            ID = new Guid("00acfb7f-6c90-459a-b53f-bf73ddac85b4"),
                            Address = "Dinalupihan, Orani , Bataan",
                            BirthDate = new DateTime(2002, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Admin@yahoo.com",
                            FirstName = "Roberto",
                            Gender = 0,
                            LastName = "Escobar",
                            MiddleName = "Adan",
                            RoleID = new Guid("54f00f70-72b8-4d34-a953-83321ff6b101")
                        });
                });

            modelBuilder.Entity("Capstonep2.Infrastructure.Domain.Models.UserLogin", b =>
                {
                    b.Property<Guid?>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Key")
                        .HasColumnType("longtext");

                    b.Property<string>("Type")
                        .HasColumnType("longtext");

                    b.Property<Guid?>("UserID")
                        .HasColumnType("char(36)");

                    b.Property<string>("Value")
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.ToTable("UserLogins");

                    b.HasData(
                        new
                        {
                            ID = new Guid("6211da11-be82-4cbc-8588-91ca023e4da5"),
                            Key = "Password",
                            Type = "General",
                            UserID = new Guid("0352c124-f290-4f99-b1a5-e235cafcd836"),
                            Value = "$2a$11$zXujKkUmz4JwsRZrTtgdYugkPxOUlb7DkUZ1pV1PwCV6gcadgqO16"
                        },
                        new
                        {
                            ID = new Guid("cebece6f-e3bf-4448-93f7-6600437f0fdd"),
                            Key = "IsActive",
                            Type = "General",
                            UserID = new Guid("0352c124-f290-4f99-b1a5-e235cafcd836"),
                            Value = "true"
                        },
                        new
                        {
                            ID = new Guid("75a93ef0-c4b4-4c53-83aa-e5de165233b5"),
                            Key = "LoginRetries",
                            Type = "General",
                            UserID = new Guid("0352c124-f290-4f99-b1a5-e235cafcd836"),
                            Value = "0"
                        },
                        new
                        {
                            ID = new Guid("81f89749-9d28-48b7-85e4-b5a1144a1365"),
                            Key = "Password",
                            Type = "General",
                            UserID = new Guid("d7dbd16f-1c71-4415-a147-22a2b428bf95"),
                            Value = "$2a$11$kmtJOUCz0cEKCY6PG5U0X.83eNkkHVaNGDa4Z9Y3D55zcM8Cs.I5y"
                        },
                        new
                        {
                            ID = new Guid("c140470d-4ae7-4258-8543-aeb3b22ca79c"),
                            Key = "IsActive",
                            Type = "General",
                            UserID = new Guid("d7dbd16f-1c71-4415-a147-22a2b428bf95"),
                            Value = "true"
                        },
                        new
                        {
                            ID = new Guid("e5914513-c1ae-4dff-a7aa-97f4cc435b42"),
                            Key = "LoginRetries",
                            Type = "General",
                            UserID = new Guid("d7dbd16f-1c71-4415-a147-22a2b428bf95"),
                            Value = "0"
                        },
                        new
                        {
                            ID = new Guid("4e60af73-a47a-4e85-aef2-acec3e7e2d28"),
                            Key = "Password",
                            Type = "General",
                            UserID = new Guid("1bd5f519-b891-4491-9a7c-a86cd0c2a15e"),
                            Value = "$2a$11$gZfAyzkqusAv/ZhSR2YXouYeg99H4lGaODp4uOHMPsw5j8lp8B2wO"
                        },
                        new
                        {
                            ID = new Guid("f1029800-e93d-420c-94ee-8c1fe3bd1e5f"),
                            Key = "IsActive",
                            Type = "General",
                            UserID = new Guid("1bd5f519-b891-4491-9a7c-a86cd0c2a15e"),
                            Value = "true"
                        },
                        new
                        {
                            ID = new Guid("47c7bfe9-8d9d-42c7-9b31-8d76dd028079"),
                            Key = "LoginRetries",
                            Type = "General",
                            UserID = new Guid("1bd5f519-b891-4491-9a7c-a86cd0c2a15e"),
                            Value = "0"
                        },
                        new
                        {
                            ID = new Guid("eecd8aad-67f3-4ecc-9492-a462feb57faa"),
                            Key = "Password",
                            Type = "General",
                            UserID = new Guid("00acfb7f-6c90-459a-b53f-bf73ddac85b4"),
                            Value = "$2a$11$2iYZFb6AprWXhZYTnNjO/.ioNa67G3.gnichLh5R3HXni438jvjiq"
                        },
                        new
                        {
                            ID = new Guid("9fb47c97-0f03-48a7-9f6c-d0bcd4f52954"),
                            Key = "IsActive",
                            Type = "General",
                            UserID = new Guid("00acfb7f-6c90-459a-b53f-bf73ddac85b4"),
                            Value = "true"
                        },
                        new
                        {
                            ID = new Guid("47942bd7-37cf-4a0c-a4e5-04e3c4e211be"),
                            Key = "LoginRetries",
                            Type = "General",
                            UserID = new Guid("00acfb7f-6c90-459a-b53f-bf73ddac85b4"),
                            Value = "0"
                        },
                        new
                        {
                            ID = new Guid("c8b508ed-b0aa-4e8d-9ddf-2a58916503e2"),
                            Key = "Password",
                            Type = "General",
                            UserID = new Guid("7e5e4f74-9902-43da-9974-4b2a08814398"),
                            Value = "$2a$11$uBBzjFKzFBxV4KvGZsJeVuDAWIeU8sQfCFKAGFhd/95reZ/Hjv4ki"
                        },
                        new
                        {
                            ID = new Guid("4760ace8-5848-4d8c-8fd9-286bf33d6d09"),
                            Key = "IsActive",
                            Type = "General",
                            UserID = new Guid("7e5e4f74-9902-43da-9974-4b2a08814398"),
                            Value = "true"
                        },
                        new
                        {
                            ID = new Guid("847d8e91-150e-4a5e-929a-1c1e24197694"),
                            Key = "LoginRetries",
                            Type = "General",
                            UserID = new Guid("7e5e4f74-9902-43da-9974-4b2a08814398"),
                            Value = "0"
                        });
                });

            modelBuilder.Entity("Capstonep2.Infrastructure.Domain.Models.UserRole", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("RoleID")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("UserID")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("RoleID");

                    b.HasIndex("UserID");

                    b.ToTable("UserRoles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3d1eccea-8f96-4838-80e7-e0a338439d66"),
                            RoleID = new Guid("2afa881f-e519-4e67-a841-e4a2630e8a2a"),
                            UserID = new Guid("0352c124-f290-4f99-b1a5-e235cafcd836")
                        },
                        new
                        {
                            Id = new Guid("50a5672a-79ab-430a-9384-b3576dba9b60"),
                            RoleID = new Guid("2afa881f-e519-4e67-a841-e4a2630e8a2a"),
                            UserID = new Guid("d7dbd16f-1c71-4415-a147-22a2b428bf95")
                        },
                        new
                        {
                            Id = new Guid("b6889cbd-c9cc-4853-8197-ab2b7d88d923"),
                            RoleID = new Guid("54f00f70-72b8-4d34-a953-83321ff6b101"),
                            UserID = new Guid("1bd5f519-b891-4491-9a7c-a86cd0c2a15e")
                        },
                        new
                        {
                            Id = new Guid("78197ad3-c2a2-49a8-91ad-a82b2a65acbb"),
                            RoleID = new Guid("54f00f70-72b8-4d34-a953-83321ff6b101"),
                            UserID = new Guid("00acfb7f-6c90-459a-b53f-bf73ddac85b4")
                        },
                        new
                        {
                            Id = new Guid("89549921-1f5f-4852-abfd-28b1adb1bcc2"),
                            RoleID = new Guid("2afa881f-e519-4e67-a841-e4a2630e8a2a"),
                            UserID = new Guid("7e5e4f74-9902-43da-9974-4b2a08814398")
                        });
                });

            modelBuilder.Entity("Capstonep2.Infrastructure.Domain.Models.Appointment", b =>
                {
                    b.HasOne("Capstonep2.Infrastructure.Domain.Models.Client", "Client")
                        .WithMany()
                        .HasForeignKey("PatientID");

                    b.Navigation("Client");
                });

            modelBuilder.Entity("Capstonep2.Infrastructure.Domain.Models.ApptPayment", b =>
                {
                    b.HasOne("Capstonep2.Infrastructure.Domain.Models.Appointment", "Appointment")
                        .WithMany()
                        .HasForeignKey("AppointmentId");

                    b.HasOne("Capstonep2.Infrastructure.Domain.Models.Payment", "Finding")
                        .WithMany()
                        .HasForeignKey("FindingId");

                    b.Navigation("Appointment");

                    b.Navigation("Finding");
                });

            modelBuilder.Entity("Capstonep2.Infrastructure.Domain.Models.ApptProvider", b =>
                {
                    b.HasOne("Capstonep2.Infrastructure.Domain.Models.Appointment", "Appointment")
                        .WithMany()
                        .HasForeignKey("AppointmentID");

                    b.HasOne("Capstonep2.Infrastructure.Domain.Models.Provider", "Provider")
                        .WithMany()
                        .HasForeignKey("ProviderId");

                    b.Navigation("Appointment");

                    b.Navigation("Provider");
                });

            modelBuilder.Entity("Capstonep2.Infrastructure.Domain.Models.ApptSevice", b =>
                {
                    b.HasOne("Capstonep2.Infrastructure.Domain.Models.Appointment", "Appointment")
                        .WithMany()
                        .HasForeignKey("AppointmentId");

                    b.HasOne("Capstonep2.Infrastructure.Domain.Models.Service", "Service")
                        .WithMany()
                        .HasForeignKey("ServiceId");

                    b.Navigation("Appointment");

                    b.Navigation("Service");
                });

            modelBuilder.Entity("Capstonep2.Infrastructure.Domain.Models.Payment", b =>
                {
                    b.HasOne("Capstonep2.Infrastructure.Domain.Models.Appointment", null)
                        .WithMany("Findings")
                        .HasForeignKey("AppointmentID");
                });

            modelBuilder.Entity("Capstonep2.Infrastructure.Domain.Models.Provider", b =>
                {
                    b.HasOne("Capstonep2.Infrastructure.Domain.Models.Appointment", null)
                        .WithMany("Providers")
                        .HasForeignKey("AppointmentID");
                });

            modelBuilder.Entity("Capstonep2.Infrastructure.Domain.Models.Service", b =>
                {
                    b.HasOne("Capstonep2.Infrastructure.Domain.Models.Appointment", null)
                        .WithMany("Services")
                        .HasForeignKey("AppointmentID");
                });

            modelBuilder.Entity("Capstonep2.Infrastructure.Domain.Models.User", b =>
                {
                    b.HasOne("Capstonep2.Infrastructure.Domain.Models.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientID");

                    b.HasOne("Capstonep2.Infrastructure.Domain.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleID");

                    b.Navigation("Client");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Capstonep2.Infrastructure.Domain.Models.UserRole", b =>
                {
                    b.HasOne("Capstonep2.Infrastructure.Domain.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleID");

                    b.HasOne("Capstonep2.Infrastructure.Domain.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID");

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Capstonep2.Infrastructure.Domain.Models.Appointment", b =>
                {
                    b.Navigation("Findings");

                    b.Navigation("Providers");

                    b.Navigation("Services");
                });
#pragma warning restore 612, 618
        }
    }
}
